

# Demo App version
IMAGE_VERSION=2.0.1
IMAGE_NAME=ghcr.io/open-telemetry/demo
DEMO_VERSION=latest

# Build Args
TRACETEST_IMAGE_VERSION=v1.7.1
OTEL_JAVA_AGENT_VERSION=2.13.3
OPENTELEMETRY_CPP_VERSION=1.19.0

# Dependent images
COLLECTOR_CONTRIB_IMAGE=ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.122.1
FLAGD_IMAGE=ghcr.io/open-feature/flagd:v0.12.1
GRAFANA_IMAGE=grafana/grafana:11.5.2
JAEGERTRACING_IMAGE=jaegertracing/all-in-one:1.66.0
POSTGRES_IMAGE=postgres:17.3
PROMETHEUS_IMAGE=quay.io/prometheus/prometheus:v3.2.0

# Demo Platform
ENV_PLATFORM=local

# OpenTelemetry Collector
HOST_FILESYSTEM=/
DOCKER_SOCK=/var/run/docker.sock
OTEL_COLLECTOR_HOST=otel-collector
OTEL_COLLECTOR_PORT_GRPC=4317
OTEL_COLLECTOR_PORT_HTTP=4318
OTEL_COLLECTOR_CONFIG=./configs/otel-collector/otelcol-config.yml
OTEL_COLLECTOR_CONFIG_EXTRAS=./configs/otel-collector/otelcol-config-extras.yml
OTEL_EXPORTER_OTLP_ENDPOINT=http://${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_GRPC}
PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:8080/otlp-http/v1/traces

# OpenTelemetry Resource Definitions
OTEL_RESOURCE_ATTRIBUTES=service.namespace=opentelemetry-demo,service.version=${IMAGE_VERSION}

# Metrics Temporality
OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE=cumulative

# Frontend Proxy (Envoy)
ENVOY_PORT=8080
FRONTEND_PROXY_ADDR=frontend-proxy:${ENVOY_PORT}
FRONTEND_PROXY_DOCKERFILE=./configs/frontend-proxy/Dockerfile

# Load Generator
LOCUST_WEB_PORT=8089
LOCUST_USERS=5
LOCUST_HOST=http://${FRONTEND_PROXY_ADDR}
LOCUST_WEB_HOST=load-generator
LOCUST_AUTOSTART=true
LOCUST_HEADLESS=false
LOAD_GENERATOR_DOCKERFILE=./configs/load-generator/Dockerfile

# Grafana
GRAFANA_PORT=3000
GRAFANA_HOST=grafana

# Jaeger
JAEGER_PORT=16686
JAEGER_HOST=jaeger

# Prometheus
PROMETHEUS_PORT=9090
PROMETHEUS_HOST=prometheus
PROMETHEUS_ADDR=${PROMETHEUS_HOST}:${PROMETHEUS_PORT}
